// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("test_users")
}

// 채널 메시지 보내기 이력
model ChannelMessage {
  id        String   @id @default(cuid())
  guildId   String
  guildName String?
  channelId String
  channelName String?
  userId    String?
  message   String
  isEveryone Boolean
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@index([guildId, channelId])
  @@map("send_messages_history")
}

// 트리거 메시지
model TriggerMessage {
  id        String   @id @default(cuid())
  guildId   String
  triggerWord String
  message   String
  isEveryone Boolean
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@index([guildId, triggerWord])
  @@map("trigger_messages")
}

// 예약 메시지
model ScheduledMessage {
  id            Int      @id @default(autoincrement())
  guildId       String
  channelId     String
  scheduleType  ScheduleType //예약 유형 (반복성 또는 1회성)
  title         String  // 예약 메시지 제목
  messageContent String // 예약 메시지 내용
  scheduledAt   DateTime? // 1회성 메시지 발송 시간
  repeatedAt    DateTime? // 반복 메시지 시작 시간
  repeatInterval Int?    // 반복 간격(일, 시, 분 (예: 1440은 하루))
  repeatType    RepeatType? // 반복 유형(일, 시, 분)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isSend      Boolean  @default(false) // 예약 메시지 전송 여부
  lastSentAt    DateTime? // 마지막 전송 시간

  @@index([guildId, channelId])
  @@map("scheduled_messages")
}
enum ScheduleType {
  ONETIME
  RECURRING
}
enum RepeatType {
  MINUTE
  HOUR
  DAY
}